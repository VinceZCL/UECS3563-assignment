services:
  postgresdb:
    image: postgres:15
    container_name: postgresdb
    environment:
      POSTGRES_DB: assignment
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: root
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - db-network
    ports:
      - "5432:5432"
  
  postgres-client:
    image: postgres:15
    container_name: postgres-client
    depends_on:
      - postgresdb
    entrypoint: ["tail", "-f", "/dev/null"]
    networks:
      - db-network

  backend:
    container_name: backend
    build:
      context: ./backend
    depends_on:
      - postgresdb
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresdb:5432/assignment
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: root
    ports:
      - "8080:8080"
    networks:
      - db-network
      - app-network
    volumes:
      - ./backend:/app
      - maven_cache:/root/.m2
    working_dir: /app
    command: mvn spring-boot:run -Dspring-boot.run.fork=false
  
  frontend:
    container_name: frontend
    build:
      context: ./frontend
    depends_on:
      - backend
    ports:
      - "4200:4200"
    networks:
      - app-network
    volumes:
      - ./frontend:/app
      - node_modules_volume:/app/node_modules
    working_dir: /app
    command: ng serve --host 0.0.0.0 --poll=2000 --disable-host-check

volumes:
  postgres_data:
  node_modules_volume:
  maven_cache:

networks:
  db-network:
  app-network: